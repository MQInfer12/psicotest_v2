/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as PrivateImport } from './routes/_private'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PrivateUsersImport } from './routes/_private/users'
import { Route as PrivateTestsImport } from './routes/_private/tests'
import { Route as PrivateChatImport } from './routes/_private/chat'
import { Route as PrivateCalendarImport } from './routes/_private/calendar'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const PrivateUsersRoute = PrivateUsersImport.update({
  path: '/users',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateTestsRoute = PrivateTestsImport.update({
  path: '/tests',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateChatRoute = PrivateChatImport.update({
  path: '/chat',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateCalendarRoute = PrivateCalendarImport.update({
  path: '/calendar',
  getParentRoute: () => PrivateRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_private/calendar': {
      id: '/_private/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof PrivateCalendarImport
      parentRoute: typeof PrivateImport
    }
    '/_private/chat': {
      id: '/_private/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof PrivateChatImport
      parentRoute: typeof PrivateImport
    }
    '/_private/tests': {
      id: '/_private/tests'
      path: '/tests'
      fullPath: '/tests'
      preLoaderRoute: typeof PrivateTestsImport
      parentRoute: typeof PrivateImport
    }
    '/_private/users': {
      id: '/_private/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof PrivateUsersImport
      parentRoute: typeof PrivateImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  PrivateRoute: PrivateRoute.addChildren({
    PrivateCalendarRoute,
    PrivateChatRoute,
    PrivateTestsRoute,
    PrivateUsersRoute,
  }),
  PublicRoute: PublicRoute.addChildren({ PublicIndexRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_private",
        "/_public"
      ]
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/calendar",
        "/_private/chat",
        "/_private/tests",
        "/_private/users"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/"
      ]
    },
    "/_private/calendar": {
      "filePath": "_private/calendar.tsx",
      "parent": "/_private"
    },
    "/_private/chat": {
      "filePath": "_private/chat.tsx",
      "parent": "/_private"
    },
    "/_private/tests": {
      "filePath": "_private/tests.tsx",
      "parent": "/_private"
    },
    "/_private/users": {
      "filePath": "_private/users.tsx",
      "parent": "/_private"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
